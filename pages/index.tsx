import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from "react";
import axios from "axios";
import { getAuth, signInWithPopup, GoogleAuthProvider, signOut} from "firebase/auth";
import { useAuthState } from "react-firebase-hooks/auth";
import { auth } from "../config/firebase"
import { useRecoilState } from "recoil";
import { accessTokenState, userNameState, updatingDataState } from "@/components/storage/storage";
import Todos from '@/components/commons/todos';
import { AiFillCheckCircle } from "react-icons/ai";
import { MdCancel } from "react-icons/md";
import CreateModal from '@/components/modals/createModal';
import { ToastContainer } from 'react-toastify';
import "react-toastify/dist/ReactToastify.css";

export default function Home() {
  const [todos, setTodos] = useState<any[]>([]);
  const [accessToken, setAccessToken] = useRecoilState(accessTokenState);
  const [userName, setUserName] = useRecoilState(userNameState);
  const [updatingData, setUpdatingData] = useRecoilState(updatingDataState);

  const provider = new GoogleAuthProvider();
  const [user, loading] = useAuthState(auth);

  useEffect(() => {
    if (!accessToken) {
      window.location.replace("/login");
    }
  }, [accessToken]);

  const ax = axios.create({
    baseURL: 'https://compfest-oprec-be.up.railway.app/todos/',
    headers: {
      'Authorization': `Bearer ${accessToken}`,
      "Content-Type": "application/json",
    }
  });

  const updateTodosData = () => {
    ax.get("")
      .then(res => {
        setTodos(res.data);
      })
  }

  useEffect(()=>{
    if (!updatingData && accessToken) {
    updateTodosData();
    }
  }, [updatingData])

  return (
    <>
      <Head>
        <title>MTodos</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/906/906334.png" />
      </Head>
      
      <main className={styles.cards}>
      
      {accessToken ? 
          <>
          <div className='mt-7 text-xl'>Hello, {userName} ðŸ‘‹</div>
          <div className='flex items-center space-x-6 mt-4 text-md'>
            <div className='flex items-center space-x-2'>
             <AiFillCheckCircle color='blue' size={20}/>
             <p>Completed</p>
            </div>
            <div className='flex items-center space-x-2'>
             <MdCancel size={20} color="red"/>
             <p>Not Completed</p>
            </div>
          </div>
          {todos.length === 0
          ? <div className="text-xl font-bold text-center flex w-full justify-center mt-10">You haven't made todos yet! ðŸ¥º</div>
          : 
          <div className='grid md:grid-cols-2 lg:grid-cols-3 sm: grid-cols-1 gap-8 mt-8 lg:mx-10 md:mx-8 mx-3'>
          {(todos.map(todos => <Todos key={todos.id} todos={todos}/>))}
          </div>
          }
          <CreateModal/>
          <ToastContainer/>
          </>
         : 
         <div/>
      }
      </main>
    </>
  )
}
